{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Henri\\\\Desktop\\\\Projektit\\\\Koodilukko\\\\koodilukko\\\\src\\\\components\\\\Codelock.js\",\n    _s = $RefreshSig$();\n\nimport './Codelock.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Codelock = () => {\n  _s();\n\n  const [buttons, setButtons] = useState([]);\n  const [input, setInput] = useState([]); // Handles moving \"0\" button to the end of the number pad component.\n  // FYI: array.shift() moves first item in array to be the last item in the array.\n\n  const generateNumPad = () => {\n    if (buttons.length > 1) {\n      return;\n    }\n\n    for (let i = 0; i < 10; i++) {\n      buttons.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 58\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 26\n      }, this));\n    }\n\n    buttons.push(buttons.shift());\n  };\n\n  generateNumPad();\n\n  const handleInput = pressedBtn => {\n    setInput([...input, pressedBtn]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"codelock-container\",\n    children: [// How array.map works and more: https://reactjs.org/docs/lists-and-keys.html\n    buttons.map((item, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleInput(id + 1),\n        children: item\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Codelock, \"p+5S4P8GgAk4iVjBXg1uEQI9b6o=\");\n\n_c = Codelock;\nexport default Codelock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Codelock\");","map":{"version":3,"names":["useState","useEffect","Codelock","buttons","setButtons","input","setInput","generateNumPad","length","i","push","shift","handleInput","pressedBtn","map","item","id"],"sources":["C:/Users/Henri/Desktop/Projektit/Koodilukko/koodilukko/src/components/Codelock.js"],"sourcesContent":["import './Codelock.css';\r\nimport { useState, useEffect } from 'react';\r\nconst Codelock = () => {\r\n    const [buttons, setButtons] = useState([]);\r\n    const [input, setInput] = useState([]);\r\n\r\n    // Handles moving \"0\" button to the end of the number pad component.\r\n    // FYI: array.shift() moves first item in array to be the last item in the array.\r\n\r\n\r\n    const generateNumPad = () => {\r\n        if (buttons.length > 1) {\r\n            return\r\n        }\r\n\r\n        for (let i = 0; i < 10; i++) {\r\n            buttons.push(<div className=\"button\" key={i}><p>{i}</p></div>)\r\n        }\r\n        buttons.push(buttons.shift());\r\n    }\r\n    generateNumPad();\r\n\r\n\r\n    const handleInput = (pressedBtn) => {\r\n        setInput([...input, pressedBtn])\r\n    }\r\n\r\n    return (\r\n        <div className=\"codelock-container\">\r\n            {\r\n                // How array.map works and more: https://reactjs.org/docs/lists-and-keys.html\r\n                buttons.map((item, id) => {\r\n                    return (\r\n                        <div key={id} onClick={() => handleInput((id + 1))}>\r\n                            {item}\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            <div>{input}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Codelock"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AACA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAFmB,CAInB;EACA;;EAGA,MAAMO,cAAc,GAAG,MAAM;IACzB,IAAIJ,OAAO,CAACK,MAAR,GAAiB,CAArB,EAAwB;MACpB;IACH;;IAED,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MACzBN,OAAO,CAACO,IAAR,eAAa;QAAK,SAAS,EAAC,QAAf;QAAA,uBAAgC;UAAA,UAAID;QAAJ;UAAA;UAAA;UAAA;QAAA;MAAhC,GAA6BA,CAA7B;QAAA;QAAA;QAAA;MAAA,QAAb;IACH;;IACDN,OAAO,CAACO,IAAR,CAAaP,OAAO,CAACQ,KAAR,EAAb;EACH,CATD;;EAUAJ,cAAc;;EAGd,MAAMK,WAAW,GAAIC,UAAD,IAAgB;IAChCP,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWQ,UAAX,CAAD,CAAR;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,oBAAf;IAAA,WAEQ;IACAV,OAAO,CAACW,GAAR,CAAY,CAACC,IAAD,EAAOC,EAAP,KAAc;MACtB,oBACI;QAAc,OAAO,EAAE,MAAMJ,WAAW,CAAEI,EAAE,GAAG,CAAP,CAAxC;QAAA,UACKD;MADL,GAAUC,EAAV;QAAA;QAAA;QAAA;MAAA,QADJ;IAKH,CAND,CAHR,eAWI;MAAA,UAAMX;IAAN;MAAA;MAAA;MAAA;IAAA,QAXJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CAxCD;;GAAMH,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
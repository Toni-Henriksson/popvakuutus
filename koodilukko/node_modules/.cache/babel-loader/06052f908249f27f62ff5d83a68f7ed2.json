{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Henri\\\\Desktop\\\\Projektit\\\\Koodilukko\\\\koodilukko\\\\src\\\\components\\\\Codelock.js\",\n    _s = $RefreshSig$();\n\nimport './Codelock.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Codelock = () => {\n  _s();\n\n  const [buttons, setButtons] = useState([]);\n  const [input, setinput] = useState([]);\n\n  for (let i = 0; i < 10; i++) {\n    buttons.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 54\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 22\n    }, this));\n  } // Handles moving \"0\" button to the end of the number pad component.\n  // FYI: array.shift() moves first item in array to be the last item in the array.\n\n\n  buttons.push(buttons.shift());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"codelock-container\",\n    children: // How array.map works and more: https://reactjs.org/docs/lists-and-keys.html\n    buttons.map((item, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => console.log(\"button: \" + id),\n        children: item\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Codelock, \"8jUw1uRJTGbY3TrHLnllKqIbIiI=\");\n\n_c = Codelock;\nexport default Codelock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Codelock\");","map":{"version":3,"names":["useState","Codelock","buttons","setButtons","input","setinput","i","push","shift","map","item","id","console","log"],"sources":["C:/Users/Henri/Desktop/Projektit/Koodilukko/koodilukko/src/components/Codelock.js"],"sourcesContent":["import './Codelock.css';\r\nimport { useState } from 'react';\r\nconst Codelock = () => {\r\n    const [buttons, setButtons] = useState([]);\r\n    const [input, setinput] = useState([]);\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n        buttons.push(<div className=\"button\" key={i}><p>{i}</p></div>)\r\n    }\r\n\r\n    // Handles moving \"0\" button to the end of the number pad component.\r\n    // FYI: array.shift() moves first item in array to be the last item in the array.\r\n    buttons.push(buttons.shift());\r\n\r\n    return (\r\n        <div className=\"codelock-container\">\r\n            {\r\n                // How array.map works and more: https://reactjs.org/docs/lists-and-keys.html\r\n                buttons.map((item, id) => {\r\n                    return (\r\n                        <div key={id} onClick={() => console.log(\"button: \" + id)}>\r\n                            {item}\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Codelock"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;EAEA,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;IACzBJ,OAAO,CAACK,IAAR,eAAa;MAAK,SAAS,EAAC,QAAf;MAAA,uBAAgC;QAAA,UAAID;MAAJ;QAAA;QAAA;QAAA;MAAA;IAAhC,GAA6BA,CAA7B;MAAA;MAAA;MAAA;IAAA,QAAb;EACH,CANkB,CAQnB;EACA;;;EACAJ,OAAO,CAACK,IAAR,CAAaL,OAAO,CAACM,KAAR,EAAb;EAEA,oBACI;IAAK,SAAS,EAAC,oBAAf;IAAA,UAEQ;IACAN,OAAO,CAACO,GAAR,CAAY,CAACC,IAAD,EAAOC,EAAP,KAAc;MACtB,oBACI;QAAc,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,aAAaF,EAAzB,CAA7B;QAAA,UACKD;MADL,GAAUC,EAAV;QAAA;QAAA;QAAA;MAAA,QADJ;IAKH,CAND;EAHR;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CA1BD;;GAAMV,Q;;KAAAA,Q;AA4BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}